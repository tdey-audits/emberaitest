{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "project": [
      "./tsconfig.base.json",
      "./lib/test-utils/tsconfig.json",
      "./lib/ember-schemas/tsconfig.json",
      "./lib/arbitrum-vibekit-core/tsconfig.json",
      "./examples/pendle-agent/tsconfig.json",
      "./lib/mcp-tools/emberai-mcp/tsconfig.json",
      "./examples/lending-agent-no-wallet/tsconfig.json",
      "./examples/swapping-agent-no-wallet/tsconfig.json",
      "./examples/liquidity-agent-no-wallet/tsconfig.json",
      "./lib/mcp-tools/allora-mcp-server/tsconfig.json",
      "./examples/swapping-agent/tsconfig.json"
    ]
  },
  "plugins": [
    "@typescript-eslint",
    "import"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "prettier"
  ],
  "rules": {
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true,
        "allowTypedFunctionExpressions": true
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "ts": "never",
        "tsx": "never",
        "js": "always",
        "jsx": "always",
        "json": "always"
      }
    ],
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/no-unresolved": "error",
    "import/no-cycle": "error",
    "import/no-self-import": "error",
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-debugger": "error",
    "prefer-const": "error",
    "no-var": "error",
    "eqeqeq": ["error", "always"],
    "curly": ["error", "all"]
  },
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": [
          "./tsconfig.base.json",
          "./lib/test-utils/tsconfig.json",
          "./lib/ember-schemas/tsconfig.json",
          "./lib/arbitrum-vibekit-core/tsconfig.json",
          "./examples/pendle-agent/tsconfig.json",
          "./lib/mcp-tools/emberai-mcp/tsconfig.json",
          "./examples/lending-agent-no-wallet/tsconfig.json",
          "./examples/swapping-agent-no-wallet/tsconfig.json",
          "./examples/liquidity-agent-no-wallet/tsconfig.json",
          "./lib/mcp-tools/allora-mcp-server/tsconfig.json",
          "./examples/swapping-agent/tsconfig.json"
        ]
      }
    }
  },
  "ignorePatterns": ["**/node_modules/**", "**/dist/**", "**/*.d.ts"]
} 