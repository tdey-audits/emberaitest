# Development Docker Compose Configuration
# This configuration is optimized for local development with hot reloading and debugging
# Usage: docker compose -f compose.dev.yaml up

services:
  lending-agent-no-wallet:
    build:
      context: ./
      dockerfile: community/lending-agent-no-wallet/Dockerfile
    container_name: vibekit-lending-agent-no-wallet-dev
    env_file:
      - path: .env
        required: true
      - path: community/lending-agent-no-wallet/.env
        required: false
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
    ports:
      - 3001:3001
    volumes:
      # Mount source code for hot reloading
      - ./community/lending-agent-no-wallet/src:/app/community/lending-agent-no-wallet/src:ro
      - ./lib:/app/lib:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:3001/health').then(() => process.exit(0)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  swapping-agent-no-wallet:
    build:
      context: ./
      dockerfile: community/swapping-agent-no-wallet/Dockerfile
    container_name: vibekit-swapping-agent-no-wallet-dev
    env_file:
      - path: .env
        required: true
      - path: community/swapping-agent-no-wallet/.env
        required: false
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
    ports:
      - 3005:3005
    volumes:
      # Mount source code for hot reloading
      - ./community/swapping-agent-no-wallet/src:/app/community/swapping-agent-no-wallet/src:ro
      - ./lib:/app/lib:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:3005/health').then(() => process.exit(0)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  coingecko-mcp-server:
    build:
      context: ./
      dockerfile: lib/mcp-tools/coingecko-mcp-server/Dockerfile
    container_name: vibekit-coingecko-mcp-server-dev
    env_file:
      - path: .env
        required: true
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
    ports:
      - 3011:3011
    volumes:
      # Mount source code for hot reloading
      - ./lib/mcp-tools/coingecko-mcp-server/src:/app/lib/mcp-tools/coingecko-mcp-server/src:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:3011/health').then(() => process.exit(0)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  defisafety-agent:
    build:
      context: ./
      dockerfile: templates/defisafety-agent/Dockerfile
    container_name: vibekit-defisafety-agent-dev
    env_file:
      - path: .env
        required: true
      - path: templates/defisafety-agent/.env
        required: false
    environment:
      - PORT=3010
      - NODE_ENV=development
      - LOG_LEVEL=debug
    ports:
      - 3010:3010
    volumes:
      # Mount source code for hot reloading
      - ./templates/defisafety-agent/src:/app/templates/defisafety-agent/src:ro
      - ./lib:/app/lib:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:3010/health').then(() => process.exit(0)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  quickstart-agent-template:
    build:
      context: ./
      dockerfile: templates/quickstart-agent/Dockerfile
    container_name: vibekit-quickstart-agent-template-dev
    env_file:
      - path: .env
        required: true
      - path: templates/quickstart-agent/.env
        required: false
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
    ports:
      - 3007:3007
    volumes:
      # Mount source code for hot reloading
      - ./templates/quickstart-agent/src:/app/templates/quickstart-agent/src:ro
      - ./lib:/app/lib:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:3007/health').then(() => process.exit(0)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  web:
    container_name: vibekit-web-app-dev
    build:
      context: ./
      dockerfile: clients/web/Dockerfile
    env_file:
      - path: .env
        required: true
      - path: clients/web/.env
        required: false
    environment:
      POSTGRES_URL: postgresql://chatbot:changeme@db:5432/chatbot
      AUTH_URL: http://localhost:3000/api/auth
      PORT: 3000
      NODE_ENV: development
    ports:
      - 3000:3000
    volumes:
      # Mount source for development - adjust path as needed for web app hot reloading
      - ./clients/web/app:/app/clients/web/app:ro
      - ./clients/web/components:/app/clients/web/components:ro
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:3000').then(() => process.exit(0)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    image: postgres:17
    container_name: vibekit-db-dev
    environment:
      POSTGRES_USER: chatbot
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: chatbot
    env_file:
      - .env
    volumes:
      - db_data_dev:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbot"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data_dev:
